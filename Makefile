# Makefile –¥–ª—è Camera Detection Project

.PHONY: build run clean test docker-build docker-run install-deps

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BINARY_NAME=camera-detection-project
DOCKER_IMAGE=camera-detection-project:latest

# –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
build:
	@echo "–°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
	go build -o $(BINARY_NAME) ./cmd/server

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
run: build
	@echo "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
	./$(BINARY_NAME)

# –ó–∞–ø—É—Å–∫ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
run-dev: build
	@echo "–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	@if [ -f .env ]; then \
		echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è .env —Ñ–∞–π–ª"; \
	else \
		echo "‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"; \
		echo "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'make setup-env' –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞"; \
	fi
	./$(BINARY_NAME)

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞
setup-env:
	@if [ ! -f .env ]; then \
		echo "# Camera Detection Project - Configuration" > .env; \
		echo "# –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–¥ –≤–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏" >> .env; \
		echo "" >> .env; \
		echo "RTSP_URL=rtsp://192.168.1.100:554/stream1" >> .env; \
		echo "CAMERA_USERNAME=admin" >> .env; \
		echo "CAMERA_PASSWORD=your_camera_password" >> .env; \
		echo "FRAME_RATE=5" >> .env; \
		echo "SAVE_FRAMES=true" >> .env; \
		echo "OUTPUT_DIR=./output" >> .env; \
		echo "CAMERA_TIMEOUT=30" >> .env; \
		echo "‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"; \
		echo "üìù –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ —Ä–µ–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"; \
	else \
		echo "‚ö†Ô∏è  .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"; \
	fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (—Ç—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ OpenCV)
install-deps:
	@echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Go –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	go mod download
	go mod tidy

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenCV (Ubuntu/Debian)
install-opencv:
	@echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenCV..."
	sudo apt update
	sudo apt install -y libopencv-dev

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenCV (macOS)
install-opencv-mac:
	@echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenCV –Ω–∞ macOS..."
	brew install opencv

# –û—á–∏—Å—Ç–∫–∞
clean:
	@echo "–û—á–∏—Å—Ç–∫–∞..."
	go clean
	rm -f $(BINARY_NAME)
	rm -rf output/

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
test:
	@echo "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	go test -v ./...

# –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
docker-build:
	@echo "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
	docker build -t $(DOCKER_IMAGE) .

# –ó–∞–ø—É—Å–∫ –≤ Docker
docker-run: docker-build
	@echo "–ó–∞–ø—É—Å–∫ –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
	docker run --rm \
		-e RTSP_URL="rtsp://192.168.1.100:554/stream1" \
		-e CAMERA_USERNAME="admin" \
		-e CAMERA_PASSWORD="your_password" \
		-v $(PWD)/output:/app/output \
		$(DOCKER_IMAGE)

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
setup:
	@echo "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
	mkdir -p output
	mkdir -p cmd/server
	mkdir -p internal/camera
	mkdir -p internal/config
	mkdir -p internal/detector
	mkdir -p internal/storage
	@if [ ! -f .env ]; then \
		echo "üìù –°–æ–∑–¥–∞—é –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª..."; \
		$(MAKE) setup-env; \
	else \
		echo "‚úÖ .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"; \
	fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞
fmt:
	@echo "–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	go fmt ./...

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞
vet:
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞..."
	go vet ./...

# –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
check: fmt vet test

# –ü–æ–º–æ—â—å
help:
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  build              - –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
	@echo "  run                - –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
	@echo "  run-dev            - –ó–∞–ø—É—Å–∫ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
	@echo "  install-deps       - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Go –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
	@echo "  install-opencv     - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenCV (Ubuntu/Debian)"
	@echo "  install-opencv-mac - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenCV (macOS)"
	@echo "  clean              - –û—á–∏—Å—Ç–∫–∞ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
	@echo "  test               - –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
	@echo "  docker-build       - –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞"
	@echo "  docker-run         - –ó–∞–ø—É—Å–∫ –≤ Docker"
	  @echo "  setup              - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"
  @echo "  setup-env          - –°–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
	@echo "  fmt                - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞"
	@echo "  vet                - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞"
	@echo "  check              - –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ (fmt + vet + test)"