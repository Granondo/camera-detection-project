version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: surveillance-postgres
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-surveillance}
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d/
    restart: unless-stopped
    networks:
      - surveillance-network

  # Camera Detection Application
  camera-detection:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: camera-detection
    depends_on:
      - postgres
    environment:
      # Camera Configuration
      - RTSP_URL=${RTSP_URL:-rtsp://192.168.1.100:554/stream1}
      - CAMERA_USERNAME=${CAMERA_USERNAME:-admin}
      - CAMERA_PASSWORD=${CAMERA_PASSWORD}
      - CAMERA_TIMEOUT=${CAMERA_TIMEOUT:-30}
      - FRAME_RATE=${FRAME_RATE:-5}
      - SAVE_FRAMES=${SAVE_FRAMES:-true}
      - OUTPUT_DIR=/app/output
      - FFMPEG_PATH=ffmpeg
      - DETECTION_ENABLED=${DETECTION_ENABLED:-true}
      
      # Database Configuration
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=${DATABASE_USER:-postgres}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-postgres}
      - DATABASE_NAME=${DATABASE_NAME:-surveillance}
      - DATABASE_SSL_MODE=disable
    volumes:
      - ./output:/app/output
      - ./logs:/app/logs
    restart: unless-stopped
    network_mode: host  # For easier RTSP access
    # Alternative: use bridge network if you prefer
    # networks:
    #   - surveillance-network
    #   ports:
    #     - "8080:8080"

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: surveillance-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@surveillance.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - surveillance-network

networks:
  surveillance-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  camera_output:
    driver: local
  camera_logs:
    driver: local